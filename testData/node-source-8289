< from source file /repos/cae/test-projects/allenAI-pipeline/src/main/scala/org/allenai/pipeline/ArtifactIo.scala >

class LineCollectionIo[T: StringSerializable: ClassTag](implicit codec: Codec)
    extends ArtifactIo[Iterable[T], FlatArtifact] with Ai2SimpleStepInfo {
  private val delegate = new LineIteratorIo[T]
  override def read(artifact: FlatArtifact): Iterable[T] =
    delegate.read(artifact).toList
  override def write(data: Iterable[T], artifact: FlatArtifact): Unit =
    delegate.write(data.iterator, artifact)
  override def stepInfo: PipelineStepInfo = {
    val className = scala.reflect.classTag[T].runtimeClass.getSimpleName
    super.stepInfo.copy(
      className = s"ReadCollection[$className]",
      parameters = Map("charSet" -> codec.charSet.toString),
      description = Some(s"Read collection of [$className] into memory")
    )
  }
}
