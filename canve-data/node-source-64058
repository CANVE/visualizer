< in file /repos/cae/test-projects/allenAI-pipeline/src/main/scala/org/allenai/pipeline/Pipeline.scala >

  def runOnly(title: String, targetNames: Iterable[String]): Iterable[(String, Any)] = {
    val targets = getStepsByName(targetNames)
    val targetStepInfo = targets.map(_._2.stepInfo).toSet
    val allDependencies = targets.flatMap { case (s, p) => Workflow.upstreamDependencies(p) }
    val nonExistentDependencies =
      for {
        p <- allDependencies if p.isInstanceOf[PersistedProducer[_, _]]
        pp = p.asInstanceOf[PersistedProducer[_, _ <: Artifact]]
        if !targetStepInfo(pp.stepInfo)
        if !pp.artifact.exists
      } yield pp.stepInfo
    require(nonExistentDependencies.isEmpty, {
      val dependencyNames = nonExistentDependencies.map(_.className).mkString(",")
      s"Cannot run steps [${targetNames.mkString(",")}]. Upstream dependencies [$dependencyNames] have not been computed"
    })
    runPipelineReturnResults(title, targetNames)
  }
