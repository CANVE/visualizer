< in file /repos/cae/test-projects/allenAI-pipeline/src/main/scala/org/allenai/pipeline/Pipeline.scala >

  object Persist {
    /** Persist a collection */
    object Collection {
      def asText[T: StringSerializable: ClassTag](
        step: Producer[Iterable[T]],
        stepName: String = null,
        suffix: String = ".txt"
      )(): PersistedProducer[Iterable[T], FlatArtifact] =
        persist(step, LineCollectionIo.text[T], stepName, suffix)
      def asJson[T: JsonFormat: ClassTag](
        step: Producer[Iterable[T]],
        stepName: String = null,
        suffix: String = ".json"
      )(): PersistedProducer[Iterable[T], FlatArtifact] =
        persist(step, LineCollectionIo.json[T], stepName, suffix)
    }
    /** Persist a single object */
    object Singleton {
      def asText[T: StringSerializable: ClassTag](
        step: Producer[T],
        stepName: String = null,
        suffix: String = ".txt"
      )(): PersistedProducer[T, FlatArtifact] =
        persist(step, SingletonIo.text[T], stepName, suffix)
      def asJson[T: JsonFormat: ClassTag](
        step: Producer[T],
        stepName: String = null,
        suffix: String = ".json"
      )(): PersistedProducer[T, FlatArtifact] =
        persist(step, SingletonIo.json[T], stepName, suffix)
    }
    /** Persist an Iterator */
    object Iterator {
      def asText[T: StringSerializable: ClassTag](
        step: Producer[Iterator[T]],
        stepName: String = null,
        suffix: String = ".txt"
      ): PersistedProducer[Iterator[T], FlatArtifact] =
        persist(step, LineIteratorIo.text[T], stepName, suffix)
      def asJson[T: JsonFormat: ClassTag](
        step: Producer[Iterator[T]],
        stepName: String = null,
        suffix: String = ".json"
      )(): PersistedProducer[Iterator[T], FlatArtifact] =
        persist(step, LineIteratorIo.json[T], stepName, suffix)
    }
  }
