< in file /repos/cae/test-projects/allenAI-pipeline/src/main/scala/org/allenai/pipeline/ArtifactFactory.scala >

object ArtifactFactory {
  def apply(urlHandler: UrlToArtifact, fallbackUrlHandlers: UrlToArtifact*): ArtifactFactory =
    new ArtifactFactory {
      val urlHandlerChain =
        if (fallbackUrlHandlers.isEmpty) {
          urlHandler
        } else {
          UrlToArtifact.chain(urlHandler, fallbackUrlHandlers.head, fallbackUrlHandlers.tail: _*)
        }
      def createArtifact[A <: Artifact: ClassTag](url: URI): A = {
        val fn = urlHandlerChain.urlToArtifact[A]
        val clazz = implicitly[ClassTag[A]].runtimeClass.asInstanceOf[Class[A]]
        require(fn.isDefinedAt(url), s"Cannot create $clazz from $url")
        fn(url)
      }
    }
}
